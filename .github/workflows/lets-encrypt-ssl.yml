name: CI/CD for Money Tracker App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo on GitHub Actions runner
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Login to Docker Hub (if building/pushing images)
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Setup SSH key for EC2
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST_DNS }} >> ~/.ssh/known_hosts

      # Test SSH connection
      - name: Test SSH connection
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ec2-user@${{ secrets.EC2_HOST_DNS }} "echo SSH connection successful"

      # Deploy on EC2
      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_DNS }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e

            echo "Updating system and installing Git if needed..."
            sudo yum update -y
            if ! command -v git &> /dev/null; then
                sudo yum install -y git
            fi

            # Ensure SSH key exists for GitHub
            mkdir -p ~/.ssh
            chmod 700 ~/.ssh

            # Clone or pull repo via SSH
            if [ -d "${{ secrets.EC2_TARGET_DIR }}/.git" ]; then
                echo "Repository exists. Pulling latest changes..."
                cd ${{ secrets.EC2_TARGET_DIR }}
                git stash || true
                git pull origin main
            else
                echo "Cloning repository via SSH..."
                git clone git@github.com:amihsan/money-tracker.git ${{ secrets.EC2_TARGET_DIR }}
            fi

            # Install Docker if not present
            if ! command -v docker &> /dev/null; then
                sudo yum install -y docker
                sudo systemctl start docker
                sudo usermod -aG docker ${{ secrets.EC2_USERNAME }}
            fi

            # Install Docker Compose if not present
            if ! command -v docker-compose &> /dev/null; then
                sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                sudo chmod +x /usr/local/bin/docker-compose
            fi

            # # For Production
            # chmod +x ./init-letsencrypt.sh
            # sudo ./init-letsencrypt.sh
